<?php

/**
 * Implements hook_menu().
 * Approve level settings/PR roles involved
 */
function camplus_pr_menu() {
	$items = array();
  $items['admin/config/camplus'] = array(
    'title' => 'Education Groupware',
    'position' => 'left',
    'weight' => -20,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('camplus bi settings'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/camplus/pr_settings'] = array(
    'title' => t('PR settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('camplus_pr_settings_form'),
    'access arguments' => array('camplus bi settings'),
    'file' => 'camplus_pr.pages.inc',
  );
  $items['admin/config/camplus/pr_settings/rang_count'] = array(
    'title' => t('PR settings rang count'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('camplus_pr_settings_form'),
    'access arguments' => array('camplus bi settings'),
    'file' => 'camplus_pr.pages.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' =>-28,
  );
	$items['admin/config/camplus/pr_settings/roles_involved'] = array(
		'title' => t('PR roles involved'),
		'page callback' => 'drupal_get_form',
    'page arguments' => array('camplus_pr_roles_involved_settings_form'),
    'access arguments' => array('camplus bi settings'),
		'file' => 'camplus_pr.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' =>-30,
	);
  $items['admin/config/camplus/pr_settings/roles_weight'] = array(
    'title' => t('PR roles weight'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('camplus_pr_roles_weight_settings_form'),
    'access arguments' => array('camplus bi settings'),
    'file' => 'camplus_pr.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' =>-29,
  );
	//PR range settings
	$items['admin/config/camplus/pr_settings/range_settings'] = array(
		'title' => t('PR range settings'),
		'page callback' => 'drupal_get_form',
    'page arguments' => array('camplus_pr_range_settings_form'),
    'access arguments' => array('camplus bi settings'),
		'file' => 'camplus_pr.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' =>-27,
	);
  $items['admin/config/camplus/pr_settings/pr_approve_settings'] = array(
    'title' => t('PR approve workflow settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('camplus_pr_approve_settings_form'),
    'access arguments' => array('camplus bi settings'),
    'file' => 'camplus_pr.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' =>-26,
  );
  $items['admin/people/advanced_management/budget/settings'] = array(
    'title' => 'Budget settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('camplus_pr_budget_settings_form'),
    'access arguments' => array('camplus budget settings'),
    'weight' => 7,
    'type' => MENU_LOCAL_TASK,
  );
	return $items;
}
/**
 * Implements hook_permission().
 */
function camplus_pr_permission() {
	return array(
    'camplus purchase request approvable' =>  array(
      'title' => t('Camplus Purchase Request approvable'),//审批资格 权限
      'restrict access' => TRUE,
    ),
    'camplus budget settings' =>  array(
      'title' => t('Camplus BI Settings'),//书记 权限 预算设置
      'restrict access' => TRUE,
    ),
   );
}
function camplus_pr_budget_settings_form() {
  if(isset($_REQUEST['financial_year'])){
    // $financial_year = $_REQUEST['financial_year'];
    $financial_year = $_REQUEST['financial_year'].'-01-01 00:00:00';
  }else {
    //2012-09-01 ~ 2013-08-31
    //2013-04-02
    //2013-09-01 ~ 2014-08-31
    $financial_year_begin = variable_get('camplus_pr_financial_year_begin', '09-01');
    $financial_year_end = variable_get('camplus_pr_financial_year_end', '08-31');
    //2014-08-31 00:00:00
    $financial_year_end = strtotime(date('Y').'-'.$financial_year_end.' 23:59:59');
    if(time()<=$financial_year_end) {
      $financial_year =  date('Y').'-01-01 00:00:00';//2013学年度
    }else{
      $financial_year =  (date('Y')+1).'-01-01 00:00:00';//2013+1学年度
    }
  }
  $public_groups = druedu_user_get_nodes_by_group('school_department');
  foreach ($public_groups as $g_nid => $g_node) {
    $groups[$g_nid]['gid'] = $g_nid;
    $groups[$g_nid]['depth'] = 0;
    $groups[$g_nid]['parent'] = 0;
    $groups[$g_nid]['type'] = 'school_department';
    $groups[$g_nid]['name'] = $g_node->title; 
    //($grade, $subject = null, $class = null, $grade_group_content = 'subject', $subject_group_content = 'class')
    // $all_subjects_node = druedu_user_get_nodes_by_group($g_nid, $subject = null, $class = null, $grade_group_content = 'budget_item');
    $all_subjects_node = camplus_pr_get_bis_by_year($g_nid,$financial_year);
    foreach ($all_subjects_node as $s_nid => $s_node) {
      $groups[$s_nid]['gid'] = $s_nid;
      $groups[$s_nid]['depth'] = 1;
      $groups[$s_nid]['parent'] = $g_nid;
      $groups[$g_nid]['type'] = 'budget_item';
      $groups[$s_nid]['name'] = $s_node->title;
    }
  }

  $form['#tree'] = TRUE;
  $form['groups'] = array(
    '#tree' => TRUE,
  );
  $form['financial_year'] = array(
    '#markup' =>l(date('Y')-1,'admin/people/advanced_management/budget/settings',array ('query' => array ('financial_year' =>date('Y')-1)) ).'<br/>'.l(date('Y'),'admin/people/advanced_management/budget/settings').'<br/>'.l(date('Y')+1,'admin/people/advanced_management/budget/settings',array ('query' => array ('financial_year' =>date('Y')+1)) ),
  );
  // l($text = 10, $path = 'search/all', $options = array ('path' => '/search/all', 'query' => array ('s' => 'teacher', 'items_per_page' => 10)));
  $order = 1;
  if(isset($groups['-1']))unset($groups['-1']);
  foreach ($groups as $gid => $group) {
      $form['groups'][$gid]['gid'] = array(
        '#type' => 'hidden',
        '#value' => $groups[$gid]['gid'],
      );
      $form['groups'][$gid]['parent'] = array(
        '#type' => 'hidden',
        // Yes, default_value on a hidden. It needs to be changeable by the javascript.
        '#default_value' => $groups[$gid]['parent'],
      );
      $form['groups'][$gid]['depth'] = array(
        '#type' => 'hidden',
        // Same as above, the depth is modified by javascript, so it's a default_value.
        '#default_value' =>  $groups[$gid]['depth'],
      );
      $form['groups'][$gid]['title'] = array(
        '#type' => 'hidden',
        // Same as above, the depth is modified by javascript, so it's a default_value.
        '#default_value' =>   $groups[$gid]['name'],
      );

    $form['groups'][$gid]['#group'] = $groups[$gid];
    $form['groups'][$gid]['#weight'] = $order;
    $form['groups'][$gid]['weight'] = array(
      '#type' => 'textfield',
      '#title' => t('Weight for @title', array('@title' => $group['name'])),
      '#title_display' => 'invisible',
      '#size' => 4,
      '#default_value' => $order,
      '#attributes' => array('class' => array('role-weight')),
    );
    $order++;

  }
  camplus_pr_get_prs(4, $uid = NULL);
  return $form;
}



/**
 * Returns HTML for the role order and new role form.
 *
 * @param $variables
 *   An associative array containing:
 *   - form: A render element representing the form.
 *
 * @ingroup themeable
 */
function theme_camplus_pr_budget_settings_form($variables) {
  $form = $variables['form'];
  $header = array(
    t('Budget item'),
    t('Weight'),
    t('Amount'),
    t('已批支出'),
    t('待批支出'),
    t('预算余额'),
    t('Allowance'),
    t('max余额'),
    t('Mixable Key'),
    t('通用余额'),
    t('Operations')
    // array('data' => , 'colspan' => 2)
    );

  foreach (element_children($form['groups']) as $key=>$gid) {

    $group = &$form['groups'][$gid];
    $name = $group['#group']['name'];
    $row = array();
    $node = node_load($gid);
    {//in_array($gid, array(DRUPAL_ANONYMOUS_RID, DRUPAL_AUTHENTICATED_RID))
     

      $row[] = (isset($group['#group']['depth']) && $group['#group']['depth'] > 0 ? theme('indentation', array('size' => $group['#group']['depth'])) : ''). t('@name', array('@name' => $name));

      $group['gid']['#attributes']['class'] = array('group-id');
      $group['parent']['#attributes']['class'] = array('group-parent');
      $group['depth']['#attributes']['class'] = array('group-depth');

      $row[0] .= drupal_render($group['parent']) . drupal_render($group['gid']) . drupal_render($group['depth']);
      //$group['weight']['#attributes']['class'] = array('term-weight');
      $form['groups'][$gid]['weight']['#attributes']['class'] = array('group-weight');
      $row[] = drupal_render($form['groups'][$gid]['weight']);
      if($node->type == 'budget_item'){
        if(isset($node->field_pr_budget[LANGUAGE_NONE])) {
          $field_pr_budget = $node->field_pr_budget[LANGUAGE_NONE][0]['value'];
          $row[] = $field_pr_budget;
        }else{ 
          $field_pr_budget = 0;
          $row[] = '-';
        }
       //已批支出 get all PRs
        $budget_nid = $gid;
        $prs = camplus_pr_get_prs($budget_nid);
         // $prs = druedu_user_get_nodes_by_group($gid, $subject = null, $class = null, $grade_group_content = 'purchase_request');

         $pending = 0;
         $approved = 0;
         $rejectd = 0;
         // get  approved appending and rejectd
         foreach ($prs as $nid => $pr_node) {
            // 排除canceled PRs
            $flags = flag_get_counts('node', $nid, $reset = FALSE);
            if(isset($flags['cancel']) && $flags['cancel']){
               dpm('canceled pr:'.$nid,__LINE__);
               continue;
            }

           $widgets = rate_get_active_widgets('node', $pr_node->type);
           //get pr item
           foreach ($pr_node->field_budget_items[LANGUAGE_NONE] as $key => $value) {
            if($value['target_id'] ==  $budget_nid) {
              //field_budget_items_amount_index
              $bi_index = $key;
              break;
            }
           }
            foreach ($widgets as $widget_id => $widget) {
              if($widget->name == 'approve'){
                $widget->id = $widget_id;
                $approve_status = _rate_pr_check_permissions($pr_node,$widget);
                switch ($approve_status['workflow_status']) {
                  case 'pending':
                    $pending += $pr_node->field_budget_items_amount[LANGUAGE_NONE][$bi_index]['value'];
                    break;
                  case 'approved':
                    $approved += $pr_node->field_budget_items_amount[LANGUAGE_NONE][$bi_index]['value'];
                    break;
                  default: //rejectd FALSE
                    $rejectd += $pr_node->field_budget_items_amount[LANGUAGE_NONE][$bi_index]['value'];
                    break;
                }
                break;
              }else{
                continue;
              }
            }
         }
        $row[] = sprintf("%01.2f", $approved);

        $row[] = sprintf("%01.2f", $pending);
        $row_d = $field_pr_budget - $approved - $pending;
        $row[] = sprintf("%01.2f", $field_pr_budget - $approved - $pending);// '预算余额';
        if(isset($node->field_pr_allowance[LANGUAGE_NONE])) {
          $row_e = $node->field_pr_allowance[LANGUAGE_NONE][0]['value'];
          $row[] = $row_e;
        }else{
          $row_e = 0;
          $row[] = '-';
        }
        $row[] = sprintf("%01.2f", $row_d + $row_e);
        if(isset($node->field_mixable_key[LANGUAGE_NONE])) {
          $row[] = $node->field_mixable_key[LANGUAGE_NONE][0]['value'];
        }else{
          $row[] = '-';
        }
        $row[] ='通用余额';
        $row[] = l(t('setting'), 'node/' . $gid.'/edit');
      }else {
        $row[] ='';//Amount
        $row[] ='';//已批支出
        $row[] ='';//待批支出
        $row[] ='';//预算余额
        $row[] ='';//Allowance
        $row[] ='';//max余额
        $row[] ='';//Mixable Key
        $row[] ='';//通用余额
        $row[] ='';//l(t('edit'), 'node/' . $gid.'/edit');
      }

      $rows[$gid] = array('data' => $row, 'class' => array('draggable','locked'));
    }
  }
    
  // Add drag and drop if parent fields are present in the form.
    drupal_add_tabledrag('groups_tree', 'match', 'parent', 'group-parent', 'group-parent', 'group-id', FALSE);
    drupal_add_tabledrag('groups_tree', 'depth', 'group', 'group-depth', NULL, NULL, FALSE);
    drupal_add_tabledrag('groups_tree', 'order', 'sibling', 'group-weight');
    drupal_add_js(drupal_get_path('module', 'druedu_user_tree') . '/druedu_user_tree.js');
  
 

  $output = theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'groups_tree')));
  $output = drupal_render_children($form).$output;

  return $output;
}

/**
 * Implements hook_theme().
 */
function camplus_pr_theme() {
  return array(
    'camplus_pr_roles_weight_settings_form' => array(
      'render element' => 'form',
    ), 
    'camplus_pr_range_settings_form'  => array(
      'render element' => 'form',
    ),
    'camplus_pr_approve_settings_form'  => array(
      'render element' => 'form',
    ),  
    'camplus_pr_budget_settings_form' => array(
      'render element' => 'form',
    ),          
  );
}
/**
 * Implements hook_form_alter().
 */
function camplus_pr_form_alter(&$form, &$form_state, $form_id) {
  $forms = array('camplus_pr_range_settings_form','camplus_pr_roles_involved_settings_form');
	if(in_array($form_id, $forms)){
    drupal_add_css(drupal_get_path('module', 'camplus_pr').'/camplus_pr.css');
  }
}

function camplus_pr_approve_flag_generate($key) {
  $flags = array();
  // Exported flag: "Bookmarks".
  $flags[$key] = array (
    'content_type' => 'node',
    'title' => 'Approve',
    'global' => '0',
    'types' => 
      array (
        0 => 'purchase_request',
      ),
    'flag_short' => 'Approve this PR',
    'flag_long' => 'Approve this Purchase Request',
    'flag_message' => 'This Purchase Request has been Approved',
    'unflag_short' => 'Unbookmark this',
    'unflag_long' => 'Remove this post from your bookmarks',
    'unflag_message' => 'This post has been removed from your bookmarks',
    'unflag_denied_text' => '',
    'link_type' => 'toggle',
    'roles' => 
      array (
        'flag' => 
        array (
          0 => 2,
        ),
        'unflag' => 
        array (
          0 => 2,
        ),
      ),
    'weight' => 0,
    'show_on_form' => 1,
    'access_author' => '',
    'show_on_page' => 1,
    'show_on_teaser' => 1,
    'show_contextual_link' => false,
    'i18n' => 0,
    'api_version' => 2,
  );
  return $flags;
}

//获取该年度的所有预算budget_item
//camplus_pr_get_bis_by_year
//financial_year 2013-01-01 00:00:00

function camplus_pr_get_bis_by_year($department_nid, $financial_year = NULL) {
  $query = db_select('field_data_field_financial_year', 'f');
  $query->join('node','n','n.nid = f.entity_id');
  $nids = $query
    ->fields('f', array('entity_id'))//nid
    ->condition('n.type ','budget_item')
    ->condition('f.field_financial_year_value',$financial_year)
    
    ->condition('n.status',1)
    ->orderBy('n.created ', 'ASC')
    ->execute();
  $nodes = node_load_multiple($nids->fetchCol());
  return $nodes ? $nodes : array();
}

//获取该预算下的所有PR
//get_group_nodes_by_uid/field_financial_year
function camplus_pr_get_prs($budget_nid, $uid = NULL) {
  //strtotime($field_financial_year);
  $query = db_select('field_data_field_budget_items', 'f');
  $query->join('node','n','n.nid = f.entity_id');
  $query = $query
    ->fields('f', array('entity_id'))//nid
    ->condition('f.field_budget_items_target_id',$budget_nid);
  if($uid && is_numeric($uid)) {
     $query = $query->condition('n.status',1);
  }
    
  $query = $query->condition('n.status',1)
    ->orderBy('n.created ', 'ASC')
    ->execute();
  $nodes = node_load_multiple($query->fetchCol());
  return $nodes ? $nodes : array();
}

/**
 * Implements hook_menu_alter().
 */
function camplus_pr_menu_alter(&$items) {
  $items['node/%node/edit']['access callback'] = 'node_access4camplus_pr';
}
/**
 * @see node_access
 */
function node_access4camplus_pr($op, $node, $account = NULL) {
  if($node->type == 'purchase_request') {
    //一旦发布 not be a Draft，不可编辑
    global $user; 
     // && !in_array('administrator', $user->roles) 
    if($node->status && $user->uid <> 1) {
      dpm('一旦发布 not be a Draft，不可编辑',__LINE__);
      return false;
    }
//delete  begin
    //  如果flag 已标记canceled，不可编辑
    // $widget = _camplus_pr_get_approve_rate($node);
    // $rate_results = rate_get_results('node', $node->nid, $widget->id);
    // $flags = flag_get_counts('node', $node->nid,TRUE);

    // dpm($flags);
    // if(isset($flags['cancel']) && $flags['cancel']) {
    //   dpm('已 cancel!无法编辑');
    //   return false;
    // }
    // if($rate_results['count']) {
    //   //只要有一人投票，即不可更改
    //   dpm('已审核或审核中，无法更改、编辑:只要有一人投票，即不可更改');  dpm($rate_results);
    //   return false;
    // }
//delete end
    return node_access($op, $node, $account = NULL);
  }else {
    return node_access($op, $node, $account = NULL);
  }
 }

 /**
 * Cancel 后，不可unflag/unCancel
 * @see flag_flag:access()
 */
function camplus_pr_flag_access($flag, $content_id, $action, $account) {
  if($flag->name == 'cancel') {
    //已 cancel!无法Uncancel 可以通过后台flag设置，这段代码可以删除掉

// del begin 
    // array(
    //   'cancel' => '1',
    // )
    $flags = flag_get_counts('node', $content_id, $reset = FALSE);
    if(isset($flags['cancel']) && $flags['cancel']){
       dpm('已cancel!无法Uncancel',__LINE__);
      // return FALSE;
    };
// del end

    //审核已通过，不可Cancel
    //审核未通过，不可Cancel
    //pending，可Cancel
    $node = node_load($content_id);
    if($node->uid != $account->uid) return;
    $widget = _camplus_pr_get_approve_rate($node);
    if(isset($widget->id))
      $approve_status = _rate_pr_check_permissions($node,$widget);
    dpm($approve_status);
    switch ($approve_status['workflow_status']) {
      case 'approved':
        dpm('审核已通过，不可Cancel',__LINE__);
        return FALSE;
        break;
      case 'reject':
        dpm('审核未通过，不可Cancel',__LINE__);
        return FALSE;
        break;
      default:
        dpm('pending，可Cancel',__LINE__);
        break;
    }
  }

}